---
- name: Converge
  hosts: all
  become: true
  vars_files:
   - vars/sipproxy.yml
  pre_tasks:
   - name: Test Setup - Install depedencies (Debian).
     become: true
     apt:
      update_cache: true
      name: "{{ item }}"
      state: present
     with_items:
      - postgresql
      - python3-pip
     when: ansible_os_family == "Debian"

   - name: Test Setup - Install psycopg2.
     become: true
     pip: name=psycopg2-binary
     when: ansible_os_family == "Debian"

   - name: Test Setup - Install depedencies (RedHat).
     become: true
     yum:
      update_cache: true
      name: "{{ item }}"
      state: present
     with_items:
      - ca-certificates
      - python-psycopg2
      - python-pycurl
      - glibc-common
      - epel-release
      - libselinux-python
     when: ansible_os_family == "RedHat"

   - name: Test Setup - Add PostgreSQL repo (RedHat).
     become: true
     yum_repository:
      name: postgresql
      description: postgresql yum repo
      baseurl: "http://yum.postgresql.org/12/{{ ansible_os_family | lower }}/rhel-{{ ansible_distribution_major_version }}-{{ ansible_architecture }}"
      gpgkey: "https://download.postgresql.org/pub/repos/yum/RPM-GPG-KEY-PGDG-12"
     when: ansible_os_family == "RedHat"

   - name: Test Setup - Install PostgreSQL (RedHat).
     become: true
     yum:
      update_cache: true
      name: "{{ item }}"
      state: present
     with_items:
      - postgresql12-server
      - postgresql12
      - postgresql12-contrib
     when: ansible_os_family == "RedHat"

   - name: Test Setup - Start Postgres Service
     service:
      name: postgresql
      state: started

   - name: Test Setup - Create Root Database.
     become_user: postgres
     postgresql_db:
      name: "{{ db_root }}"
      state: present

   - name: Test Setup - Create User Database user.
     become_user: postgres
     postgresql_user:
      name: "{{ dbuser_root }}"
      password: "{{ dbpass_root }}"
      role_attr_flags: "SUPERUSER"

  roles:
   - role: ansible-role-sip-proxy
