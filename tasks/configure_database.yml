---
- name: Create Kamailio Database.
  postgresql_db:
    name: "{{ kam_dbname }}"
    state: present
    login_user: "{{ dbrootuser }}"
  environment:
    PGHOST: "{{ dbhost }}"
    PGPORT: "{{ dbport }}"
    PGPASSWORD: "{{ dbrootpass }}"
    PGDATABASE: "{{ dbrootname }}"
  run_once: true
  register: _kamailio_database

- name: Create Tables in Kamailio Database
  shell:
    cmd: |
      cat {{ kamailio_dest_directory }}/kamailio/utils/kamctl/postgres/version-create.sql > /tmp/db_import.sql
      cat {{ kamailio_dest_directory }}/kamailio/utils/kamctl/postgres/*.sql > /tmp/db_import.sql
      psql postgres://{{ kam_dbuser }}:{{ kam_dbpass }}@{{ dbhost }}:{{ dbport }}/{{ kam_dbname }} -f /tmp/db_import.sql
  environment:
    PGHOST: "{{ dbhost }}"
    PGPORT: "{{ dbport }}"
    PGUSER: "{{ kam_dbuser }}"
    PGPASSWORD: "{{ kam_dbpass }}"
    PGDATABASE: "{{ kam_dbname }}"
  when: _kamailio_database.changed
  run_once: true

- name: Create Kamailio user.
  postgresql_user:
    name: "{{ kam_dbuser }}"
    password: "{{ kam_dbpass }}"
    login_user: "{{ dbrootuser }}"
  environment:
    PGHOST: "{{ dbhost }}"
    PGPORT: "{{ dbport }}"
    PGPASSWORD: "{{ dbrootpass }}"
    PGDATABASE: "{{ dbrootname }}"
  run_once: true

- name: Grant all privledges to user:{{ kam_db_user }} on database:{{ kam_dbname }}.
  postgresql_privs:
    db: "{{ kam_dbname }}"
    privs: ALL
    type: database
    role: "{{kam_dbuser}}"
    login_user: "{{ dbrootuser }}"
  environment:
    PGHOST: "{{ dbhost }}"
    PGPORT: "{{ dbport }}"
    PGPASSWORD: "{{ dbrootpass }}"
    PGDATABASE: "{{ dbrootname }}"
  run_once: true

- name: Add Recorders as dispatcher destinations.
  command: |
    psql -c "INSERT INTO dispatcher
    VALUES ('{{ index }}', '{{ disp_set }}', 'sip:{{ item.ip }}:{{ item.port }};transport={{ item.protocol }}', '{{ item.flags| default(0) }}', '{{ item.priority | default(0) }}', '{{ item.attrs | default('') }}', '{{ item.name }}')
    ON CONFLICT (id)
    DO UPDATE SET
    id={{ index }}, setid={{ disp_set }}, destination='sip:{{ item.ip }}:{{ item.port }};transport={{ item.protocol }}', flags={{ item.flags| default(0) }}, priority={{ item.priority | default(0) }}, attrs='{{ item.attrs | default=('') }}'', description='{{ item.name }}';"
  run_once: true
  loop: "{{ disptacher_destinations }}"
  loop_control:
    index_var: index
  environment:
    PGHOST: "{{ dbhost }}"
    PGPORT: "{{ dbport }}"
    PGUSER: "{{ kam_dbuser }}"
    PGPASSWORD: "{{ kam_dbpass }}"
    PGDATABASE: "{{ kam_dbname }}"

